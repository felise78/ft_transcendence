# Generated by Django 5.1.6 on 2025-04-13 16:41

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('game_id', models.CharField(default='game-0', max_length=50, primary_key=True, serialize=False, unique=True)),
                ('mode', models.CharField(default='1vs1', max_length=100)),
                ('player1_score', models.IntegerField(default=0)),
                ('player2_score', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('player1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player1', to='profiles.userprofile')),
                ('player2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player2', to='profiles.userprofile')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profiles.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('tournament_id', models.CharField(default='tournament-0', max_length=100, primary_key=True, serialize=False, unique=True)),
                ('max_players', models.IntegerField(default=4)),
                ('status', models.CharField(choices=[('waiting', 'Waiting for players'), ('semifinals', 'Semifinals in progress'), ('finals', 'Finals in progress'), ('completed', 'Tournament completed'), ('interrupted', 'Tournament interrupted')], default='waiting', max_length=20)),
                ('is_active', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_completed', models.DateTimeField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tournaments', to='profiles.userprofile')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_tournaments', to='profiles.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias1', models.CharField(blank=True, default='', max_length=100)),
                ('alias2', models.CharField(blank=True, default='', max_length=100)),
                ('round', models.CharField(choices=[('semifinal', 'Semifinal'), ('final', 'Final')], max_length=20)),
                ('order', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_game', to='pong.game')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_games', to='pong.tournament')),
            ],
            options={
                'ordering': ['round', 'order'],
                'unique_together': {('tournament', 'game')},
            },
        ),
        migrations.CreateModel(
            name='TournamentPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(blank=True, max_length=100)),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='pong.tournament')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournaments', to='profiles.userprofile')),
            ],
            options={
                'unique_together': {('tournament', 'user_profile')},
            },
        ),
    ]
